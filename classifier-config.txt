# -*- Awk -*-
# ranker-classifier-training-config.txt
# Jeremy Barnes, 11 August 2009
#
# Controls how the ranking classifier is trained

# Neural Network
nn {
    type=perceptron
    arch=50
    verbosity=3
    max_iter=100
    learning_rate=0.01
    batch_size=10
}

# Bagged boosted decision trees
bbdt {
    type=bagging;
    verbosity=3;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=3;
            verbosity=0;
            update_alg=gentle;
            random_feature_propn=0.5;
        }
        min_iter=5;
        max_iter=30;
    }
    num_bags=5;
}

bbdt_d2 {
    type=bagging;
    verbosity=3;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=2;
            verbosity=0;
            update_alg=gentle;
            random_feature_propn=1;
        }
        min_iter=5;
        max_iter=30;
    }
    num_bags=5;
}

bbdt_d2 {
    type=bagging;
    verbosity=3;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=2;
            verbosity=0;
            update_alg=gentle;
            random_feature_propn=1;
        }
        min_iter=5;
        max_iter=30;
    }
    num_bags=5;
}

bbdt_d5 {
    type=bagging;
    verbosity=3;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=5;
            verbosity=0;
            update_alg=gentle;
            random_feature_propn=1;
        }
        min_iter=5;
        max_iter=30;
    }
    num_bags=5;
}

# Bagged decision trees
bdt {
    type=bagging;
    verbosity=3;
    weak_learner {
        type=decision_tree;
        verbosity=0;
        max_depth=5;
    }
    num_bags=20;
}

# Plain decision trees
dt {
    type=decision_tree;
    max_depth=8;
    verbosity=3;
    update_alg=prob;
}

# Generalized Linear Model.  Very smooth but needs very good features.
glz {
    type=glz;
    verbosity=3;
    normalize = true;
    ridge_regression = true;
}

bbdt2 {
    type=bagging;
    verbosity=1;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=5;
            verbosity=0;
            update_alg=gentle;
            random_feature_propn=0.8;
        }
        min_iter=5;
        max_iter=10;
        verbosity=0;
    }
    num_bags=32;
}

# Boosted stumps
bs {
    type=boosted_stumps;
    min_iter=10;
    max_iter=200;
    update_alg=gentle;
    verbosity=3;
}

bs2 {
    type=boosting;
    verbosity=3;
    weak_learner {
        type=decision_tree;
        max_depth=1;
        verbosity=0;
        update_alg=gentle;
    }
    min_iter=5;
    max_iter=300;
    trace_training_acc=true;
}

bbs2 {
    type=bagging;
    num_bags=5;
    weak_learner {
        type=boosting;
        verbosity=3;
        weak_learner {
            type=decision_tree;
            max_depth=1;
            verbosity=0;
            update_alg=gentle;
        }
        min_iter=5;
        max_iter=300;
        trace_training_acc=true;
    }
}

# Bagged random GLZ
bglz {
    type=bagging;
    verbosity=1;
    validation_split=0.1;
    weak_learner {
        type=glz;
        feature_proportion=1.0;
        verbosity=0;
    }
    num_bags=32;
}

# Generalized Linear Model.  Very smooth but needs very good features.
glz2 {
    type=glz;
    verbosity=3;
}


ranker: glz {
}
